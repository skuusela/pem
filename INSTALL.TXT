Building and Installing
=======================

Home Page
---------
The project is hosted on Intel Open Source Technology Center github: 
https://github.com/01org/pem


Premise
-------
The SW has been tested with OpenSUSE 13.2 and 42.1 64 bits.
Other distros should work equally well, since the code is 100% python, but
they are not confirmed.
About the Arduino: at the moment the only supported type is UNO R3, as
explained in detail in the documentation.


Installing PEM
-----------------------
Installing PEM can be done by cloning the repository and using setup.py to
install:

git clone https://github.com/01org/pem
cd pem/
sudo python setup.py install


Preparing the Arduino
---------------------
* Plug the Arduino UNO to your computer. Using Arduino IDE 1.6.5 version 
open the 'pem_Arduino.ino' file from 'pem/pem_Arduino/' folder. Use 
Sketch->Verify/Compile to first compile the code and then Sketch->Upload 
to flash the Arduino. Other way is to use already compiled binary file 
and AVRDUDE which can be installed using a package manager. Flashing 
Arduino this way can be done by issuing following command in the 
'pem/pem_Arduino/' folder while Arduino is connected to your computer:

sudo avrdude -patmega328p -carduino -P/dev/ttyACM0 -b115200 -D -Uflash:w:pem_Arduino.hex:i

* After the Arduino is successfully flashed, its USB connector must be converted
to USB-keyboard mode, following the instructions from:

http://hunt.net.nz/users/darran/
http://www.arduino.cc/en/Hacking/DFUProgramming8U2

Note: to update the FW on the Arduino, first it must be brought back to its 
initial USB-gadget mode, still following the instructions from the links.

* The Arduino is connected to the host through an USB-to-serial adapter.
The TX pin of the adapter must be connected to the RX line provided by the
emulated serial port on the Arduino (PIN_10), while the RX pin of the emulator
must be connected to the TX provided by the Arduino.
